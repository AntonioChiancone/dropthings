//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
//
namespace Dropthing.Silverlight.DropthingsWebService
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DropthingsWebService.WidgetServiceSoap")]
    public interface WidgetServiceSoap
    {
        #region Methods

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginAddWidgetInstance(Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AssignPermission", ReplyAction="*")]
        System.IAsyncResult BeginAssignPermission(Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequest request, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CollaspeWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginCollaspeWidgetInstance(Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginDeleteWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ExpandWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginExpandWidgetInstance(Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetWidgetState", ReplyAction="*")]
        System.IAsyncResult BeginGetWidgetState(Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequest request, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MaximizeWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginMaximizeWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MoveWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginMoveWidgetInstance(int instanceId, int toZoneId, int toRow, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ResizeWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginResizeWidgetInstance(int widgetId, int width, int height, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RestoreWidgetInstance", ReplyAction="*")]
        System.IAsyncResult BeginRestoreWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveWidgetState", ReplyAction="*")]
        System.IAsyncResult BeginSaveWidgetState(Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequest request, System.AsyncCallback callback, object asyncState);

        Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponse EndAddWidgetInstance(System.IAsyncResult result);

        Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponse EndAssignPermission(System.IAsyncResult result);

        Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponse EndCollaspeWidgetInstance(System.IAsyncResult result);

        void EndDeleteWidgetInstance(System.IAsyncResult result);

        Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponse EndExpandWidgetInstance(System.IAsyncResult result);

        Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponse EndGetWidgetState(System.IAsyncResult result);

        void EndMaximizeWidgetInstance(System.IAsyncResult result);

        void EndMoveWidgetInstance(System.IAsyncResult result);

        void EndResizeWidgetInstance(System.IAsyncResult result);

        void EndRestoreWidgetInstance(System.IAsyncResult result);

        Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponse EndSaveWidgetState(System.IAsyncResult result);

        #endregion Methods
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface WidgetServiceSoapChannel : Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddWidgetInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        #region Fields

        private object[] results;

        #endregion Fields

        #region Constructors

        public AddWidgetInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            : base(exception, cancelled, userState)
        {
            this.results = results;
        }

        #endregion Constructors

        #region Properties

        public string Result
        {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        #endregion Properties
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddWidgetInstanceRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddWidgetInstance", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequestBody Body;

        #endregion Fields

        #region Constructors

        public AddWidgetInstanceRequest()
        {
        }

        public AddWidgetInstanceRequest(Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequestBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddWidgetInstanceRequestBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string postbackUrl;
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int toRow;
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int toZone;
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int widgetId;

        #endregion Fields

        #region Constructors

        public AddWidgetInstanceRequestBody()
        {
        }

        public AddWidgetInstanceRequestBody(int widgetId, int toZone, int toRow, string postbackUrl)
        {
            this.widgetId = widgetId;
            this.toZone = toZone;
            this.toRow = toRow;
            this.postbackUrl = postbackUrl;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddWidgetInstanceResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddWidgetInstanceResponse", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponseBody Body;

        #endregion Fields

        #region Constructors

        public AddWidgetInstanceResponse()
        {
        }

        public AddWidgetInstanceResponse(Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponseBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddWidgetInstanceResponseBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string AddWidgetInstanceResult;

        #endregion Fields

        #region Constructors

        public AddWidgetInstanceResponseBody()
        {
        }

        public AddWidgetInstanceResponseBody(string AddWidgetInstanceResult)
        {
            this.AddWidgetInstanceResult = AddWidgetInstanceResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AssignPermissionRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="AssignPermission", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequestBody Body;

        #endregion Fields

        #region Constructors

        public AssignPermissionRequest()
        {
        }

        public AssignPermissionRequest(Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequestBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AssignPermissionRequestBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string widgetPermissions;

        #endregion Fields

        #region Constructors

        public AssignPermissionRequestBody()
        {
        }

        public AssignPermissionRequestBody(string widgetPermissions)
        {
            this.widgetPermissions = widgetPermissions;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AssignPermissionResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="AssignPermissionResponse", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponseBody Body;

        #endregion Fields

        #region Constructors

        public AssignPermissionResponse()
        {
        }

        public AssignPermissionResponse(Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponseBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute]
    public partial class AssignPermissionResponseBody
    {
        #region Constructors

        public AssignPermissionResponseBody()
        {
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CollaspeWidgetInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        #region Fields

        private object[] results;

        #endregion Fields

        #region Constructors

        public CollaspeWidgetInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            : base(exception, cancelled, userState)
        {
            this.results = results;
        }

        #endregion Constructors

        #region Properties

        public string Result
        {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        #endregion Properties
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CollaspeWidgetInstanceRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="CollaspeWidgetInstance", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequestBody Body;

        #endregion Fields

        #region Constructors

        public CollaspeWidgetInstanceRequest()
        {
        }

        public CollaspeWidgetInstanceRequest(Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequestBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CollaspeWidgetInstanceRequestBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string postbackUrl;
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int widgetId;

        #endregion Fields

        #region Constructors

        public CollaspeWidgetInstanceRequestBody()
        {
        }

        public CollaspeWidgetInstanceRequestBody(int widgetId, string postbackUrl)
        {
            this.widgetId = widgetId;
            this.postbackUrl = postbackUrl;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CollaspeWidgetInstanceResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="CollaspeWidgetInstanceResponse", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponseBody Body;

        #endregion Fields

        #region Constructors

        public CollaspeWidgetInstanceResponse()
        {
        }

        public CollaspeWidgetInstanceResponse(Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponseBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CollaspeWidgetInstanceResponseBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CollaspeWidgetInstanceResult;

        #endregion Fields

        #region Constructors

        public CollaspeWidgetInstanceResponseBody()
        {
        }

        public CollaspeWidgetInstanceResponseBody(string CollaspeWidgetInstanceResult)
        {
            this.CollaspeWidgetInstanceResult = CollaspeWidgetInstanceResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ExpandWidgetInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        #region Fields

        private object[] results;

        #endregion Fields

        #region Constructors

        public ExpandWidgetInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            : base(exception, cancelled, userState)
        {
            this.results = results;
        }

        #endregion Constructors

        #region Properties

        public string Result
        {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        #endregion Properties
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExpandWidgetInstanceRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExpandWidgetInstance", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequestBody Body;

        #endregion Fields

        #region Constructors

        public ExpandWidgetInstanceRequest()
        {
        }

        public ExpandWidgetInstanceRequest(Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequestBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ExpandWidgetInstanceRequestBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string postbackUrl;
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int widgetId;

        #endregion Fields

        #region Constructors

        public ExpandWidgetInstanceRequestBody()
        {
        }

        public ExpandWidgetInstanceRequestBody(int widgetId, string postbackUrl)
        {
            this.widgetId = widgetId;
            this.postbackUrl = postbackUrl;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExpandWidgetInstanceResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExpandWidgetInstanceResponse", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponseBody Body;

        #endregion Fields

        #region Constructors

        public ExpandWidgetInstanceResponse()
        {
        }

        public ExpandWidgetInstanceResponse(Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponseBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ExpandWidgetInstanceResponseBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ExpandWidgetInstanceResult;

        #endregion Fields

        #region Constructors

        public ExpandWidgetInstanceResponseBody()
        {
        }

        public ExpandWidgetInstanceResponseBody(string ExpandWidgetInstanceResult)
        {
            this.ExpandWidgetInstanceResult = ExpandWidgetInstanceResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetWidgetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        #region Fields

        private object[] results;

        #endregion Fields

        #region Constructors

        public GetWidgetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            : base(exception, cancelled, userState)
        {
            this.results = results;
        }

        #endregion Constructors

        #region Properties

        public string Result
        {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        #endregion Properties
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWidgetStateRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWidgetState", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequestBody Body;

        #endregion Fields

        #region Constructors

        public GetWidgetStateRequest()
        {
        }

        public GetWidgetStateRequest(Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequestBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWidgetStateRequestBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int widgetId;

        #endregion Fields

        #region Constructors

        public GetWidgetStateRequestBody()
        {
        }

        public GetWidgetStateRequestBody(int widgetId)
        {
            this.widgetId = widgetId;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWidgetStateResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWidgetStateResponse", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponseBody Body;

        #endregion Fields

        #region Constructors

        public GetWidgetStateResponse()
        {
        }

        public GetWidgetStateResponse(Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponseBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWidgetStateResponseBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetWidgetStateResult;

        #endregion Fields

        #region Constructors

        public GetWidgetStateResponseBody()
        {
        }

        public GetWidgetStateResponseBody(string GetWidgetStateResult)
        {
            this.GetWidgetStateResult = GetWidgetStateResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveWidgetStateRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveWidgetState", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequestBody Body;

        #endregion Fields

        #region Constructors

        public SaveWidgetStateRequest()
        {
        }

        public SaveWidgetStateRequest(Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequestBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SaveWidgetStateRequestBody
    {
        #region Fields

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string state;
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int widgetId;

        #endregion Fields

        #region Constructors

        public SaveWidgetStateRequestBody()
        {
        }

        public SaveWidgetStateRequestBody(int widgetId, string state)
        {
            this.widgetId = widgetId;
            this.state = state;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveWidgetStateResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveWidgetStateResponse", Namespace="http://tempuri.org/", Order=0)]
        public Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponseBody Body;

        #endregion Fields

        #region Constructors

        public SaveWidgetStateResponse()
        {
        }

        public SaveWidgetStateResponse(Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponseBody Body)
        {
            this.Body = Body;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute]
    public partial class SaveWidgetStateResponseBody
    {
        #region Constructors

        public SaveWidgetStateResponseBody()
        {
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class WidgetServiceSoapClient : System.ServiceModel.ClientBase<Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap>, Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap
    {
        #region Fields

        private System.Threading.SendOrPostCallback onAddWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onAssignPermissionCompletedDelegate;
        private BeginOperationDelegate onBeginAddWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginAssignPermissionDelegate;
        private BeginOperationDelegate onBeginCloseDelegate;
        private BeginOperationDelegate onBeginCollaspeWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginDeleteWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginExpandWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginGetWidgetStateDelegate;
        private BeginOperationDelegate onBeginMaximizeWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginMoveWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginOpenDelegate;
        private BeginOperationDelegate onBeginResizeWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginRestoreWidgetInstanceDelegate;
        private BeginOperationDelegate onBeginSaveWidgetStateDelegate;
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        private System.Threading.SendOrPostCallback onCollaspeWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onDeleteWidgetInstanceCompletedDelegate;
        private EndOperationDelegate onEndAddWidgetInstanceDelegate;
        private EndOperationDelegate onEndAssignPermissionDelegate;
        private EndOperationDelegate onEndCloseDelegate;
        private EndOperationDelegate onEndCollaspeWidgetInstanceDelegate;
        private EndOperationDelegate onEndDeleteWidgetInstanceDelegate;
        private EndOperationDelegate onEndExpandWidgetInstanceDelegate;
        private EndOperationDelegate onEndGetWidgetStateDelegate;
        private EndOperationDelegate onEndMaximizeWidgetInstanceDelegate;
        private EndOperationDelegate onEndMoveWidgetInstanceDelegate;
        private EndOperationDelegate onEndOpenDelegate;
        private EndOperationDelegate onEndResizeWidgetInstanceDelegate;
        private EndOperationDelegate onEndRestoreWidgetInstanceDelegate;
        private EndOperationDelegate onEndSaveWidgetStateDelegate;
        private System.Threading.SendOrPostCallback onExpandWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onGetWidgetStateCompletedDelegate;
        private System.Threading.SendOrPostCallback onMaximizeWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onMoveWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        private System.Threading.SendOrPostCallback onResizeWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onRestoreWidgetInstanceCompletedDelegate;
        private System.Threading.SendOrPostCallback onSaveWidgetStateCompletedDelegate;

        #endregion Fields

        #region Constructors

        public WidgetServiceSoapClient()
        {
        }

        public WidgetServiceSoapClient(string endpointConfigurationName)
            : base(endpointConfigurationName)
        {
        }

        public WidgetServiceSoapClient(string endpointConfigurationName, string remoteAddress)
            : base(endpointConfigurationName, remoteAddress)
        {
        }

        public WidgetServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            : base(endpointConfigurationName, remoteAddress)
        {
        }

        public WidgetServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            : base(binding, remoteAddress)
        {
        }

        #endregion Constructors

        #region Events

        public event System.EventHandler<AddWidgetInstanceCompletedEventArgs> AddWidgetInstanceCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AssignPermissionCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        public event System.EventHandler<CollaspeWidgetInstanceCompletedEventArgs> CollaspeWidgetInstanceCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteWidgetInstanceCompleted;

        public event System.EventHandler<ExpandWidgetInstanceCompletedEventArgs> ExpandWidgetInstanceCompleted;

        public event System.EventHandler<GetWidgetStateCompletedEventArgs> GetWidgetStateCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MaximizeWidgetInstanceCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MoveWidgetInstanceCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResizeWidgetInstanceCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RestoreWidgetInstanceCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveWidgetStateCompleted;

        #endregion Events

        #region Methods

        public void AddWidgetInstanceAsync(int widgetId, int toZone, int toRow, string postbackUrl)
        {
            this.AddWidgetInstanceAsync(widgetId, toZone, toRow, postbackUrl, null);
        }

        public void AddWidgetInstanceAsync(int widgetId, int toZone, int toRow, string postbackUrl, object userState)
        {
            if ((this.onBeginAddWidgetInstanceDelegate == null)) {
                this.onBeginAddWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginAddWidgetInstance);
            }
            if ((this.onEndAddWidgetInstanceDelegate == null)) {
                this.onEndAddWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndAddWidgetInstance);
            }
            if ((this.onAddWidgetInstanceCompletedDelegate == null)) {
                this.onAddWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginAddWidgetInstanceDelegate, new object[] {
                        widgetId,
                        toZone,
                        toRow,
                        postbackUrl}, this.onEndAddWidgetInstanceDelegate, this.onAddWidgetInstanceCompletedDelegate, userState);
        }

        public void AssignPermissionAsync(string widgetPermissions)
        {
            this.AssignPermissionAsync(widgetPermissions, null);
        }

        public void AssignPermissionAsync(string widgetPermissions, object userState)
        {
            if ((this.onBeginAssignPermissionDelegate == null)) {
                this.onBeginAssignPermissionDelegate = new BeginOperationDelegate(this.OnBeginAssignPermission);
            }
            if ((this.onEndAssignPermissionDelegate == null)) {
                this.onEndAssignPermissionDelegate = new EndOperationDelegate(this.OnEndAssignPermission);
            }
            if ((this.onAssignPermissionCompletedDelegate == null)) {
                this.onAssignPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssignPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginAssignPermissionDelegate, new object[] {
                        widgetPermissions}, this.onEndAssignPermissionDelegate, this.onAssignPermissionCompletedDelegate, userState);
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        public void CollaspeWidgetInstanceAsync(int widgetId, string postbackUrl)
        {
            this.CollaspeWidgetInstanceAsync(widgetId, postbackUrl, null);
        }

        public void CollaspeWidgetInstanceAsync(int widgetId, string postbackUrl, object userState)
        {
            if ((this.onBeginCollaspeWidgetInstanceDelegate == null)) {
                this.onBeginCollaspeWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginCollaspeWidgetInstance);
            }
            if ((this.onEndCollaspeWidgetInstanceDelegate == null)) {
                this.onEndCollaspeWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndCollaspeWidgetInstance);
            }
            if ((this.onCollaspeWidgetInstanceCompletedDelegate == null)) {
                this.onCollaspeWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCollaspeWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginCollaspeWidgetInstanceDelegate, new object[] {
                        widgetId,
                        postbackUrl}, this.onEndCollaspeWidgetInstanceDelegate, this.onCollaspeWidgetInstanceCompletedDelegate, userState);
        }

        public void DeleteWidgetInstanceAsync(int widgetId)
        {
            this.DeleteWidgetInstanceAsync(widgetId, null);
        }

        public void DeleteWidgetInstanceAsync(int widgetId, object userState)
        {
            if ((this.onBeginDeleteWidgetInstanceDelegate == null)) {
                this.onBeginDeleteWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginDeleteWidgetInstance);
            }
            if ((this.onEndDeleteWidgetInstanceDelegate == null)) {
                this.onEndDeleteWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndDeleteWidgetInstance);
            }
            if ((this.onDeleteWidgetInstanceCompletedDelegate == null)) {
                this.onDeleteWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteWidgetInstanceDelegate, new object[] {
                        widgetId}, this.onEndDeleteWidgetInstanceDelegate, this.onDeleteWidgetInstanceCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginAddWidgetInstance(Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAddWidgetInstance(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginAssignPermission(Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAssignPermission(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginCollaspeWidgetInstance(Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCollaspeWidgetInstance(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginDeleteWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginDeleteWidgetInstance(widgetId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginExpandWidgetInstance(Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExpandWidgetInstance(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginGetWidgetState(Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetWidgetState(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginMaximizeWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginMaximizeWidgetInstance(widgetId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginMoveWidgetInstance(int instanceId, int toZoneId, int toRow, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginMoveWidgetInstance(instanceId, toZoneId, toRow, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginResizeWidgetInstance(int widgetId, int width, int height, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginResizeWidgetInstance(widgetId, width, height, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginRestoreWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRestoreWidgetInstance(widgetId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.BeginSaveWidgetState(Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSaveWidgetState(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponse Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndAddWidgetInstance(System.IAsyncResult result)
        {
            return base.Channel.EndAddWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponse Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndAssignPermission(System.IAsyncResult result)
        {
            return base.Channel.EndAssignPermission(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponse Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndCollaspeWidgetInstance(System.IAsyncResult result)
        {
            return base.Channel.EndCollaspeWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndDeleteWidgetInstance(System.IAsyncResult result)
        {
            base.Channel.EndDeleteWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponse Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndExpandWidgetInstance(System.IAsyncResult result)
        {
            return base.Channel.EndExpandWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponse Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndGetWidgetState(System.IAsyncResult result)
        {
            return base.Channel.EndGetWidgetState(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndMaximizeWidgetInstance(System.IAsyncResult result)
        {
            base.Channel.EndMaximizeWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndMoveWidgetInstance(System.IAsyncResult result)
        {
            base.Channel.EndMoveWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndResizeWidgetInstance(System.IAsyncResult result)
        {
            base.Channel.EndResizeWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndRestoreWidgetInstance(System.IAsyncResult result)
        {
            base.Channel.EndRestoreWidgetInstance(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponse Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap.EndSaveWidgetState(System.IAsyncResult result)
        {
            return base.Channel.EndSaveWidgetState(result);
        }

        public void ExpandWidgetInstanceAsync(int widgetId, string postbackUrl)
        {
            this.ExpandWidgetInstanceAsync(widgetId, postbackUrl, null);
        }

        public void ExpandWidgetInstanceAsync(int widgetId, string postbackUrl, object userState)
        {
            if ((this.onBeginExpandWidgetInstanceDelegate == null)) {
                this.onBeginExpandWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginExpandWidgetInstance);
            }
            if ((this.onEndExpandWidgetInstanceDelegate == null)) {
                this.onEndExpandWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndExpandWidgetInstance);
            }
            if ((this.onExpandWidgetInstanceCompletedDelegate == null)) {
                this.onExpandWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExpandWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginExpandWidgetInstanceDelegate, new object[] {
                        widgetId,
                        postbackUrl}, this.onEndExpandWidgetInstanceDelegate, this.onExpandWidgetInstanceCompletedDelegate, userState);
        }

        public void GetWidgetStateAsync(int widgetId)
        {
            this.GetWidgetStateAsync(widgetId, null);
        }

        public void GetWidgetStateAsync(int widgetId, object userState)
        {
            if ((this.onBeginGetWidgetStateDelegate == null)) {
                this.onBeginGetWidgetStateDelegate = new BeginOperationDelegate(this.OnBeginGetWidgetState);
            }
            if ((this.onEndGetWidgetStateDelegate == null)) {
                this.onEndGetWidgetStateDelegate = new EndOperationDelegate(this.OnEndGetWidgetState);
            }
            if ((this.onGetWidgetStateCompletedDelegate == null)) {
                this.onGetWidgetStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWidgetStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetWidgetStateDelegate, new object[] {
                        widgetId}, this.onEndGetWidgetStateDelegate, this.onGetWidgetStateCompletedDelegate, userState);
        }

        public void MaximizeWidgetInstanceAsync(int widgetId)
        {
            this.MaximizeWidgetInstanceAsync(widgetId, null);
        }

        public void MaximizeWidgetInstanceAsync(int widgetId, object userState)
        {
            if ((this.onBeginMaximizeWidgetInstanceDelegate == null)) {
                this.onBeginMaximizeWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginMaximizeWidgetInstance);
            }
            if ((this.onEndMaximizeWidgetInstanceDelegate == null)) {
                this.onEndMaximizeWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndMaximizeWidgetInstance);
            }
            if ((this.onMaximizeWidgetInstanceCompletedDelegate == null)) {
                this.onMaximizeWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaximizeWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginMaximizeWidgetInstanceDelegate, new object[] {
                        widgetId}, this.onEndMaximizeWidgetInstanceDelegate, this.onMaximizeWidgetInstanceCompletedDelegate, userState);
        }

        public void MoveWidgetInstanceAsync(int instanceId, int toZoneId, int toRow)
        {
            this.MoveWidgetInstanceAsync(instanceId, toZoneId, toRow, null);
        }

        public void MoveWidgetInstanceAsync(int instanceId, int toZoneId, int toRow, object userState)
        {
            if ((this.onBeginMoveWidgetInstanceDelegate == null)) {
                this.onBeginMoveWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginMoveWidgetInstance);
            }
            if ((this.onEndMoveWidgetInstanceDelegate == null)) {
                this.onEndMoveWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndMoveWidgetInstance);
            }
            if ((this.onMoveWidgetInstanceCompletedDelegate == null)) {
                this.onMoveWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginMoveWidgetInstanceDelegate, new object[] {
                        instanceId,
                        toZoneId,
                        toRow}, this.onEndMoveWidgetInstanceDelegate, this.onMoveWidgetInstanceCompletedDelegate, userState);
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        public void ResizeWidgetInstanceAsync(int widgetId, int width, int height)
        {
            this.ResizeWidgetInstanceAsync(widgetId, width, height, null);
        }

        public void ResizeWidgetInstanceAsync(int widgetId, int width, int height, object userState)
        {
            if ((this.onBeginResizeWidgetInstanceDelegate == null)) {
                this.onBeginResizeWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginResizeWidgetInstance);
            }
            if ((this.onEndResizeWidgetInstanceDelegate == null)) {
                this.onEndResizeWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndResizeWidgetInstance);
            }
            if ((this.onResizeWidgetInstanceCompletedDelegate == null)) {
                this.onResizeWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResizeWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginResizeWidgetInstanceDelegate, new object[] {
                        widgetId,
                        width,
                        height}, this.onEndResizeWidgetInstanceDelegate, this.onResizeWidgetInstanceCompletedDelegate, userState);
        }

        public void RestoreWidgetInstanceAsync(int widgetId)
        {
            this.RestoreWidgetInstanceAsync(widgetId, null);
        }

        public void RestoreWidgetInstanceAsync(int widgetId, object userState)
        {
            if ((this.onBeginRestoreWidgetInstanceDelegate == null)) {
                this.onBeginRestoreWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginRestoreWidgetInstance);
            }
            if ((this.onEndRestoreWidgetInstanceDelegate == null)) {
                this.onEndRestoreWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndRestoreWidgetInstance);
            }
            if ((this.onRestoreWidgetInstanceCompletedDelegate == null)) {
                this.onRestoreWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreWidgetInstanceDelegate, new object[] {
                        widgetId}, this.onEndRestoreWidgetInstanceDelegate, this.onRestoreWidgetInstanceCompletedDelegate, userState);
        }

        public void SaveWidgetStateAsync(int widgetId, string state)
        {
            this.SaveWidgetStateAsync(widgetId, state, null);
        }

        public void SaveWidgetStateAsync(int widgetId, string state, object userState)
        {
            if ((this.onBeginSaveWidgetStateDelegate == null)) {
                this.onBeginSaveWidgetStateDelegate = new BeginOperationDelegate(this.OnBeginSaveWidgetState);
            }
            if ((this.onEndSaveWidgetStateDelegate == null)) {
                this.onEndSaveWidgetStateDelegate = new EndOperationDelegate(this.OnEndSaveWidgetState);
            }
            if ((this.onSaveWidgetStateCompletedDelegate == null)) {
                this.onSaveWidgetStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveWidgetStateCompleted);
            }
            base.InvokeAsync(this.onBeginSaveWidgetStateDelegate, new object[] {
                        widgetId,
                        state}, this.onEndSaveWidgetStateDelegate, this.onSaveWidgetStateCompletedDelegate, userState);
        }

        protected override Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap CreateChannel()
        {
            return new WidgetServiceSoapClientChannel(this);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddWidgetInstance(int widgetId, int toZone, int toRow, string postbackUrl, System.AsyncCallback callback, object asyncState)
        {
            Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequest inValue = new Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequest();
            inValue.Body = new Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequestBody();
            inValue.Body.widgetId = widgetId;
            inValue.Body.toZone = toZone;
            inValue.Body.toRow = toRow;
            inValue.Body.postbackUrl = postbackUrl;
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginAddWidgetInstance(inValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAssignPermission(string widgetPermissions, System.AsyncCallback callback, object asyncState)
        {
            Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequest inValue = new Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequest();
            inValue.Body = new Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequestBody();
            inValue.Body.widgetPermissions = widgetPermissions;
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginAssignPermission(inValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCollaspeWidgetInstance(int widgetId, string postbackUrl, System.AsyncCallback callback, object asyncState)
        {
            Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequest inValue = new Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequest();
            inValue.Body = new Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequestBody();
            inValue.Body.widgetId = widgetId;
            inValue.Body.postbackUrl = postbackUrl;
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginCollaspeWidgetInstance(inValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginExpandWidgetInstance(int widgetId, string postbackUrl, System.AsyncCallback callback, object asyncState)
        {
            Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequest inValue = new Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequest();
            inValue.Body = new Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequestBody();
            inValue.Body.widgetId = widgetId;
            inValue.Body.postbackUrl = postbackUrl;
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginExpandWidgetInstance(inValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetWidgetState(int widgetId, System.AsyncCallback callback, object asyncState)
        {
            Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequest inValue = new Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequest();
            inValue.Body = new Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequestBody();
            inValue.Body.widgetId = widgetId;
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginGetWidgetState(inValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveWidgetState(int widgetId, string state, System.AsyncCallback callback, object asyncState)
        {
            Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequest inValue = new Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequest();
            inValue.Body = new Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequestBody();
            inValue.Body.widgetId = widgetId;
            inValue.Body.state = state;
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginSaveWidgetState(inValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndAddWidgetInstance(System.IAsyncResult result)
        {
            Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponse retVal = ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndAddWidgetInstance(result);
            return retVal.Body.AddWidgetInstanceResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndAssignPermission(System.IAsyncResult result)
        {
            Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponse retVal = ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndAssignPermission(result);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndCollaspeWidgetInstance(System.IAsyncResult result)
        {
            Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponse retVal = ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndCollaspeWidgetInstance(result);
            return retVal.Body.CollaspeWidgetInstanceResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndExpandWidgetInstance(System.IAsyncResult result)
        {
            Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponse retVal = ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndExpandWidgetInstance(result);
            return retVal.Body.ExpandWidgetInstanceResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetWidgetState(System.IAsyncResult result)
        {
            Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponse retVal = ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndGetWidgetState(result);
            return retVal.Body.GetWidgetStateResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndSaveWidgetState(System.IAsyncResult result)
        {
            Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponse retVal = ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndSaveWidgetState(result);
        }

        private void OnAddWidgetInstanceCompleted(object state)
        {
            if ((this.AddWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddWidgetInstanceCompleted(this, new AddWidgetInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnAssignPermissionCompleted(object state)
        {
            if ((this.AssignPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssignPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private System.IAsyncResult OnBeginAddWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            int toZone = ((int)(inValues[1]));
            int toRow = ((int)(inValues[2]));
            string postbackUrl = ((string)(inValues[3]));
            return this.BeginAddWidgetInstance(widgetId, toZone, toRow, postbackUrl, callback, asyncState);
        }

        private System.IAsyncResult OnBeginAssignPermission(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string widgetPermissions = ((string)(inValues[0]));
            return this.BeginAssignPermission(widgetPermissions, callback, asyncState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private System.IAsyncResult OnBeginCollaspeWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            string postbackUrl = ((string)(inValues[1]));
            return this.BeginCollaspeWidgetInstance(widgetId, postbackUrl, callback, asyncState);
        }

        private System.IAsyncResult OnBeginDeleteWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginDeleteWidgetInstance(widgetId, callback, asyncState);
        }

        private System.IAsyncResult OnBeginExpandWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            string postbackUrl = ((string)(inValues[1]));
            return this.BeginExpandWidgetInstance(widgetId, postbackUrl, callback, asyncState);
        }

        private System.IAsyncResult OnBeginGetWidgetState(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            return this.BeginGetWidgetState(widgetId, callback, asyncState);
        }

        private System.IAsyncResult OnBeginMaximizeWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginMaximizeWidgetInstance(widgetId, callback, asyncState);
        }

        private System.IAsyncResult OnBeginMoveWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int instanceId = ((int)(inValues[0]));
            int toZoneId = ((int)(inValues[1]));
            int toRow = ((int)(inValues[2]));
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginMoveWidgetInstance(instanceId, toZoneId, toRow, callback, asyncState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private System.IAsyncResult OnBeginResizeWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            int width = ((int)(inValues[1]));
            int height = ((int)(inValues[2]));
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginResizeWidgetInstance(widgetId, width, height, callback, asyncState);
        }

        private System.IAsyncResult OnBeginRestoreWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            return ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).BeginRestoreWidgetInstance(widgetId, callback, asyncState);
        }

        private System.IAsyncResult OnBeginSaveWidgetState(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int widgetId = ((int)(inValues[0]));
            string state = ((string)(inValues[1]));
            return this.BeginSaveWidgetState(widgetId, state, callback, asyncState);
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnCollaspeWidgetInstanceCompleted(object state)
        {
            if ((this.CollaspeWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CollaspeWidgetInstanceCompleted(this, new CollaspeWidgetInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnDeleteWidgetInstanceCompleted(object state)
        {
            if ((this.DeleteWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private object[] OnEndAddWidgetInstance(System.IAsyncResult result)
        {
            string retVal = this.EndAddWidgetInstance(result);
            return new object[] {
                    retVal};
        }

        private object[] OnEndAssignPermission(System.IAsyncResult result)
        {
            this.EndAssignPermission(result);
            return null;
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private object[] OnEndCollaspeWidgetInstance(System.IAsyncResult result)
        {
            string retVal = this.EndCollaspeWidgetInstance(result);
            return new object[] {
                    retVal};
        }

        private object[] OnEndDeleteWidgetInstance(System.IAsyncResult result)
        {
            ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndDeleteWidgetInstance(result);
            return null;
        }

        private object[] OnEndExpandWidgetInstance(System.IAsyncResult result)
        {
            string retVal = this.EndExpandWidgetInstance(result);
            return new object[] {
                    retVal};
        }

        private object[] OnEndGetWidgetState(System.IAsyncResult result)
        {
            string retVal = this.EndGetWidgetState(result);
            return new object[] {
                    retVal};
        }

        private object[] OnEndMaximizeWidgetInstance(System.IAsyncResult result)
        {
            ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndMaximizeWidgetInstance(result);
            return null;
        }

        private object[] OnEndMoveWidgetInstance(System.IAsyncResult result)
        {
            ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndMoveWidgetInstance(result);
            return null;
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private object[] OnEndResizeWidgetInstance(System.IAsyncResult result)
        {
            ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndResizeWidgetInstance(result);
            return null;
        }

        private object[] OnEndRestoreWidgetInstance(System.IAsyncResult result)
        {
            ((Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap)(this)).EndRestoreWidgetInstance(result);
            return null;
        }

        private object[] OnEndSaveWidgetState(System.IAsyncResult result)
        {
            this.EndSaveWidgetState(result);
            return null;
        }

        private void OnExpandWidgetInstanceCompleted(object state)
        {
            if ((this.ExpandWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExpandWidgetInstanceCompleted(this, new ExpandWidgetInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnGetWidgetStateCompleted(object state)
        {
            if ((this.GetWidgetStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWidgetStateCompleted(this, new GetWidgetStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnMaximizeWidgetInstanceCompleted(object state)
        {
            if ((this.MaximizeWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaximizeWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnMoveWidgetInstanceCompleted(object state)
        {
            if ((this.MoveWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnResizeWidgetInstanceCompleted(object state)
        {
            if ((this.ResizeWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResizeWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnRestoreWidgetInstanceCompleted(object state)
        {
            if ((this.RestoreWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        private void OnSaveWidgetStateCompleted(object state)
        {
            if ((this.SaveWidgetStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveWidgetStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        #endregion Methods

        #region Nested Types

        private class WidgetServiceSoapClientChannel : ChannelBase<Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap>, Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap
        {
            #region Constructors

            public WidgetServiceSoapClientChannel(System.ServiceModel.ClientBase<Dropthing.Silverlight.DropthingsWebService.WidgetServiceSoap> client)
                : base(client)
            {
            }

            #endregion Constructors

            #region Methods

            public System.IAsyncResult BeginAddWidgetInstance(Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginAssignPermission(Dropthing.Silverlight.DropthingsWebService.AssignPermissionRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AssignPermission", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginCollaspeWidgetInstance(Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CollaspeWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginDeleteWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = widgetId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginExpandWidgetInstance(Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ExpandWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginGetWidgetState(Dropthing.Silverlight.DropthingsWebService.GetWidgetStateRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetWidgetState", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginMaximizeWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = widgetId;
                System.IAsyncResult _result = base.BeginInvoke("MaximizeWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginMoveWidgetInstance(int instanceId, int toZoneId, int toRow, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = instanceId;
                _args[1] = toZoneId;
                _args[2] = toRow;
                System.IAsyncResult _result = base.BeginInvoke("MoveWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginResizeWidgetInstance(int widgetId, int width, int height, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = widgetId;
                _args[1] = width;
                _args[2] = height;
                System.IAsyncResult _result = base.BeginInvoke("ResizeWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginRestoreWidgetInstance(int widgetId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = widgetId;
                System.IAsyncResult _result = base.BeginInvoke("RestoreWidgetInstance", _args, callback, asyncState);
                return _result;
            }

            public System.IAsyncResult BeginSaveWidgetState(Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveWidgetState", _args, callback, asyncState);
                return _result;
            }

            public Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponse EndAddWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponse _result = ((Dropthing.Silverlight.DropthingsWebService.AddWidgetInstanceResponse)(base.EndInvoke("AddWidgetInstance", _args, result)));
                return _result;
            }

            public Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponse EndAssignPermission(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponse _result = ((Dropthing.Silverlight.DropthingsWebService.AssignPermissionResponse)(base.EndInvoke("AssignPermission", _args, result)));
                return _result;
            }

            public Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponse EndCollaspeWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponse _result = ((Dropthing.Silverlight.DropthingsWebService.CollaspeWidgetInstanceResponse)(base.EndInvoke("CollaspeWidgetInstance", _args, result)));
                return _result;
            }

            public void EndDeleteWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("DeleteWidgetInstance", _args, result);
            }

            public Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponse EndExpandWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponse _result = ((Dropthing.Silverlight.DropthingsWebService.ExpandWidgetInstanceResponse)(base.EndInvoke("ExpandWidgetInstance", _args, result)));
                return _result;
            }

            public Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponse EndGetWidgetState(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponse _result = ((Dropthing.Silverlight.DropthingsWebService.GetWidgetStateResponse)(base.EndInvoke("GetWidgetState", _args, result)));
                return _result;
            }

            public void EndMaximizeWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("MaximizeWidgetInstance", _args, result);
            }

            public void EndMoveWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("MoveWidgetInstance", _args, result);
            }

            public void EndResizeWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("ResizeWidgetInstance", _args, result);
            }

            public void EndRestoreWidgetInstance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("RestoreWidgetInstance", _args, result);
            }

            public Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponse EndSaveWidgetState(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponse _result = ((Dropthing.Silverlight.DropthingsWebService.SaveWidgetStateResponse)(base.EndInvoke("SaveWidgetState", _args, result)));
                return _result;
            }

            #endregion Methods
        }

        #endregion Nested Types
    }
}